/* Fonts */

/* Variables */

/* Mixins */
@mixin hide-text{
    overflow:hidden;
    text-indent:-900em;
    display:block;
}

@mixin floated-list{
    margin:0;
	padding:0;
	li{
		padding:0;
		list-style:none;
		float:left;
	}
}

@mixin clearfix{
	zoom: 1;
	&:before, &:after { 
		content: '.'; 
		display: block; 
		overflow: hidden; 
		visibility: hidden; 
		font-size: 0; 
		line-height: 0; 
		width: 0; height: 0; 
	} 
	&:after{ 
		clear: both; 
	}
}

/* Helpers */
@mixin display-grid {
    display: -ms-grid;
    display: grid;
}

@mixin display-inline-grid {
    display: -ms-inline-grid;
    display: inline-grid;
}

//use 'fr' for fraction widths
//for equal columns you can use repeat(3, 1fr)
//you can name the lines instead of using numbers e.g. grid-template-rows: [header-start] 20vh [header-end]
//lines can have multiple names, split with a space e.g. [header-end main-start]
//When specifying the grid-row or grid-column you can then use the name instead of the number e.g. grid-column: header-start / header-end;
@mixin grid-layout($columns, $rows, $gutter: 0){
    -ms-grid-columns: $columns;
    grid-template-columns: $columns;
    -ms-grid-rows: $rows;
    grid-template-rows: $rows;
    grid-gap: $gutter;
}

//start and end are the grid lines, so for an item that starts at 1 and spans one section use 1 / 2
//for an item that starts at 3 and spans three sections use 3 / 6
@mixin grid-item-row-span($start, $end) {
    -ms-grid-row-span: ($end - $start);
    grid-row: $start / $end;
}

@mixin grid-item-column-span($start, $end) {
    -ms-grid-column-span: ($end - $start);
    grid-column: $start / $end;
}

@mixin display-flex{
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($flex){
    //-webkit-box-flex: $flex;
    //-webkit-flex: $flex;
        -ms-flex: $flex;
            flex: $flex;        
}

@mixin flex-flow($flow) { 
    //-webkit-flex-flow: $flow;
        -ms-flex-flow: $flow;
            flex-flow: $flow;
}

@mixin justify-content($value) {
              -ms-flex-pack: $value;
    //-webkit-justify-content: $value;
        -ms-justify-content: $value;
            justify-content: $value;
}

@mixin align-content($value) {
    //-webkit-align-content: $value;
        -ms-align-content: $value;
            align-content: $value;
}

@mixin align-items($value) {
    //-webkit-align-items: $value;
        -ms-align-items: $value;
            align-items: $value;
}

@mixin border-radius($radius) {
    border-radius: $radius;
    background-clip: padding-box;
}

@mixin box-shadow($shadow) {
    box-shadow: $shadow;
}

@mixin transform($transform) {
    //-webkit-transform: $transform;
        -ms-transform: $transform;
            transform: $transform;
}

@mixin transform3d($transform, $perspective: 300px) {
    -webkit-perspective: $perspective;
        -ms-perspective: $perspective;
            perspective: $perspective;
    
    //-webkit-transform: $transform;
        -ms-transform: $transform;
            transform: $transform;

    -webkit-transform-style: preserve-3d;
            transform-style: preserve-3d;
}

@mixin transition($transition...){
	//-webkit-transition: $transition;
            transition: $transition; 
}

@mixin text-shadow($shadow){
    text-shadow: $shadow;
}

@mixin columns($count: 2, $gap: 15px){
    -webkit-column-count: $count;  
       -moz-column-count: $count;     
            column-count: $count;          

    -webkit-column-gap: $gap;
       -moz-column-gap: $gap;
            column-gap: $gap;
}

@mixin linear-gradient($from, $to, $isHorizontal: 0){
    $start: top;
    $end: bottom;
    @if $isHorizontal == 1 {
        $start: left;
        $end: right;
    } 

    background: $from;
    //background: -moz-linear-gradient($start,  $from 0%, $to 100%);
    background: -webkit-linear-gradient($start,  $from 0%,$to 100%);
    background: linear-gradient(to $end,  $from 0%,$to 100%);
}

@mixin animation($animation) {
    //-webkit-animation: $animation;
    animation: $animation;
}

@mixin keyframes($name) {
	//@-webkit-keyframes #{$name} { @content }
	@keyframes #{$name} { @content }
}

@mixin vendor-prefix($name, $value, $prefix-value: 0) {
	@each $vendor in ('-webkit-', '-moz-', '-ms-', '') {
		@if $prefix-value == 1 {
			#{$vendor}#{$name}: #{$vendor}#{$value};
		}
		@else {
			#{$vendor}#{$name}: #{$value};
		}
	}	
}